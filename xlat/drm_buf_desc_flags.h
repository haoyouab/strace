/* Generated by ./xlat/gen.sh from ./xlat/drm_buf_desc_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(_DRM_PAGE_ALIGN) || (defined(HAVE_DECL__DRM_PAGE_ALIGN) && HAVE_DECL__DRM_PAGE_ALIGN)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_PAGE_ALIGN) == (0x01), "_DRM_PAGE_ALIGN != 0x01");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_PAGE_ALIGN 0x01
#endif
#if defined(_DRM_AGP_BUFFER) || (defined(HAVE_DECL__DRM_AGP_BUFFER) && HAVE_DECL__DRM_AGP_BUFFER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_AGP_BUFFER) == (0x02), "_DRM_AGP_BUFFER != 0x02");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_AGP_BUFFER 0x02
#endif
#if defined(_DRM_SG_BUFFER) || (defined(HAVE_DECL__DRM_SG_BUFFER) && HAVE_DECL__DRM_SG_BUFFER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_SG_BUFFER) == (0x04), "_DRM_SG_BUFFER != 0x04");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_SG_BUFFER 0x04
#endif
#if defined(_DRM_FB_BUFFER) || (defined(HAVE_DECL__DRM_FB_BUFFER) && HAVE_DECL__DRM_FB_BUFFER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_FB_BUFFER) == (0x08), "_DRM_FB_BUFFER != 0x08");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_FB_BUFFER 0x08
#endif
#if defined(_DRM_PCI_BUFFER_RO) || (defined(HAVE_DECL__DRM_PCI_BUFFER_RO) && HAVE_DECL__DRM_PCI_BUFFER_RO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_PCI_BUFFER_RO) == (0x10), "_DRM_PCI_BUFFER_RO != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_PCI_BUFFER_RO 0x10
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat drm_buf_desc_flags[];

# else

static const struct xlat_data drm_buf_desc_flags_xdata[] = {
 XLAT(_DRM_PAGE_ALIGN),
 XLAT(_DRM_AGP_BUFFER),
 XLAT(_DRM_SG_BUFFER),
 XLAT(_DRM_FB_BUFFER),
 XLAT(_DRM_PCI_BUFFER_RO),
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat drm_buf_desc_flags[1] = { {
 .data = drm_buf_desc_flags_xdata,
 .size = ARRAY_SIZE(drm_buf_desc_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
