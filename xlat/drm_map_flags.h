/* Generated by ./xlat/gen.sh from ./xlat/drm_map_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(_DRM_RESTRICTED) || (defined(HAVE_DECL__DRM_RESTRICTED) && HAVE_DECL__DRM_RESTRICTED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_RESTRICTED) == (0x01), "_DRM_RESTRICTED != 0x01");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_RESTRICTED 0x01
#endif
#if defined(_DRM_READ_ONLY) || (defined(HAVE_DECL__DRM_READ_ONLY) && HAVE_DECL__DRM_READ_ONLY)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_READ_ONLY) == (0x02), "_DRM_READ_ONLY != 0x02");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_READ_ONLY 0x02
#endif
#if defined(_DRM_LOCKED) || (defined(HAVE_DECL__DRM_LOCKED) && HAVE_DECL__DRM_LOCKED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_LOCKED) == (0x04), "_DRM_LOCKED != 0x04");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_LOCKED 0x04
#endif
#if defined(_DRM_KERNEL) || (defined(HAVE_DECL__DRM_KERNEL) && HAVE_DECL__DRM_KERNEL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_KERNEL) == (0x08), "_DRM_KERNEL != 0x08");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_KERNEL 0x08
#endif
#if defined(_DRM_WRITE_COMBINING) || (defined(HAVE_DECL__DRM_WRITE_COMBINING) && HAVE_DECL__DRM_WRITE_COMBINING)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_WRITE_COMBINING) == (0x10), "_DRM_WRITE_COMBINING != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_WRITE_COMBINING 0x10
#endif
#if defined(_DRM_CONTAINS_LOCK) || (defined(HAVE_DECL__DRM_CONTAINS_LOCK) && HAVE_DECL__DRM_CONTAINS_LOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_CONTAINS_LOCK) == (0x20), "_DRM_CONTAINS_LOCK != 0x20");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_CONTAINS_LOCK 0x20
#endif
#if defined(_DRM_REMOVABLE) || (defined(HAVE_DECL__DRM_REMOVABLE) && HAVE_DECL__DRM_REMOVABLE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_REMOVABLE) == (0x40), "_DRM_REMOVABLE != 0x40");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_REMOVABLE 0x40
#endif
#if defined(_DRM_DRIVER) || (defined(HAVE_DECL__DRM_DRIVER) && HAVE_DECL__DRM_DRIVER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_DRIVER) == (0x80), "_DRM_DRIVER != 0x80");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_DRIVER 0x80
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat drm_map_flags[];

# else

static const struct xlat_data drm_map_flags_xdata[] = {
 XLAT(_DRM_RESTRICTED),
 XLAT(_DRM_READ_ONLY),
 XLAT(_DRM_LOCKED),
 XLAT(_DRM_KERNEL),
 XLAT(_DRM_WRITE_COMBINING),
 XLAT(_DRM_CONTAINS_LOCK),
 XLAT(_DRM_REMOVABLE),
 XLAT(_DRM_DRIVER),
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat drm_map_flags[1] = { {
 .data = drm_map_flags_xdata,
 .size = ARRAY_SIZE(drm_map_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
