/* Generated by ./xlat/gen.sh from ./xlat/drm_lock_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(_DRM_LOCK_READY) || (defined(HAVE_DECL__DRM_LOCK_READY) && HAVE_DECL__DRM_LOCK_READY)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_LOCK_READY) == (0x01), "_DRM_LOCK_READY != 0x01");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_LOCK_READY 0x01
#endif
#if defined(_DRM_LOCK_QUIESCENT) || (defined(HAVE_DECL__DRM_LOCK_QUIESCENT) && HAVE_DECL__DRM_LOCK_QUIESCENT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_LOCK_QUIESCENT) == (0x02), "_DRM_LOCK_QUIESCENT != 0x02");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_LOCK_QUIESCENT 0x02
#endif
#if defined(_DRM_LOCK_FLUSH) || (defined(HAVE_DECL__DRM_LOCK_FLUSH) && HAVE_DECL__DRM_LOCK_FLUSH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_LOCK_FLUSH) == (0x04), "_DRM_LOCK_FLUSH != 0x04");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_LOCK_FLUSH 0x04
#endif
#if defined(_DRM_LOCK_FLUSH_ALL) || (defined(HAVE_DECL__DRM_LOCK_FLUSH_ALL) && HAVE_DECL__DRM_LOCK_FLUSH_ALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_LOCK_FLUSH_ALL) == (0x08), "_DRM_LOCK_FLUSH_ALL != 0x08");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_LOCK_FLUSH_ALL 0x08
#endif
#if defined(_DRM_HALT_ALL_QUEUES) || (defined(HAVE_DECL__DRM_HALT_ALL_QUEUES) && HAVE_DECL__DRM_HALT_ALL_QUEUES)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_HALT_ALL_QUEUES) == (0x10), "_DRM_HALT_ALL_QUEUES != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_HALT_ALL_QUEUES 0x10
#endif
#if defined(_DRM_HALT_CUR_QUEUES) || (defined(HAVE_DECL__DRM_HALT_CUR_QUEUES) && HAVE_DECL__DRM_HALT_CUR_QUEUES)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_HALT_CUR_QUEUES) == (0x20), "_DRM_HALT_CUR_QUEUES != 0x20");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_HALT_CUR_QUEUES 0x20
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat drm_lock_flags in mpers mode

# else

static const struct xlat_data drm_lock_flags_xdata[] = {
 XLAT(_DRM_LOCK_READY),
 XLAT(_DRM_LOCK_QUIESCENT),
 XLAT(_DRM_LOCK_FLUSH),
 XLAT(_DRM_LOCK_FLUSH_ALL),
 XLAT(_DRM_HALT_ALL_QUEUES),
 XLAT(_DRM_HALT_CUR_QUEUES),
};
static
const struct xlat drm_lock_flags[1] = { {
 .data = drm_lock_flags_xdata,
 .size = ARRAY_SIZE(drm_lock_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
