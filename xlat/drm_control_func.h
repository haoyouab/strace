/* Generated by ./xlat/gen.sh from ./xlat/drm_control_func.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(DRM_ADD_COMMAND) || (defined(HAVE_DECL_DRM_ADD_COMMAND) && HAVE_DECL_DRM_ADD_COMMAND)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((DRM_ADD_COMMAND) == (0), "DRM_ADD_COMMAND != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define DRM_ADD_COMMAND 0
#endif
#if defined(DRM_RM_COMMAND) || (defined(HAVE_DECL_DRM_RM_COMMAND) && HAVE_DECL_DRM_RM_COMMAND)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((DRM_RM_COMMAND) == (1), "DRM_RM_COMMAND != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define DRM_RM_COMMAND 1
#endif
#if defined(DRM_INST_HANDLER) || (defined(HAVE_DECL_DRM_INST_HANDLER) && HAVE_DECL_DRM_INST_HANDLER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((DRM_INST_HANDLER) == (2), "DRM_INST_HANDLER != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define DRM_INST_HANDLER 2
#endif
#if defined(DRM_UNINST_HANDLER) || (defined(HAVE_DECL_DRM_UNINST_HANDLER) && HAVE_DECL_DRM_UNINST_HANDLER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((DRM_UNINST_HANDLER) == (3), "DRM_UNINST_HANDLER != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define DRM_UNINST_HANDLER 3
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat drm_control_func in mpers mode

# else

static const struct xlat_data drm_control_func_xdata[] = {
 XLAT(DRM_ADD_COMMAND),
 XLAT(DRM_RM_COMMAND),
 XLAT(DRM_INST_HANDLER),
 XLAT(DRM_UNINST_HANDLER),
};
static
const struct xlat drm_control_func[1] = { {
 .data = drm_control_func_xdata,
 .size = ARRAY_SIZE(drm_control_func_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
