/* Generated by ./xlat/gen.sh from ./xlat/drm_ctx_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(_DRM_CONTEXT_PRESERVED) || (defined(HAVE_DECL__DRM_CONTEXT_PRESERVED) && HAVE_DECL__DRM_CONTEXT_PRESERVED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_CONTEXT_PRESERVED) == (0x01), "_DRM_CONTEXT_PRESERVED != 0x01");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_CONTEXT_PRESERVED 0x01
#endif
#if defined(_DRM_CONTEXT_2DONLY) || (defined(HAVE_DECL__DRM_CONTEXT_2DONLY) && HAVE_DECL__DRM_CONTEXT_2DONLY)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((_DRM_CONTEXT_2DONLY) == (0x02), "_DRM_CONTEXT_2DONLY != 0x02");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define _DRM_CONTEXT_2DONLY 0x02
#endif

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

static const struct xlat_data drm_ctx_flags_xdata[] = {
 XLAT(_DRM_CONTEXT_PRESERVED),
 XLAT(_DRM_CONTEXT_2DONLY),
};
const struct xlat drm_ctx_flags[1] = { {
 .data = drm_ctx_flags_xdata,
 .size = ARRAY_SIZE(drm_ctx_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
